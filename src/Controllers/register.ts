import { User } from "../Models/User";
import { MyContext } from "../types/MyContext";
import { isValidDate } from "../utils/validateDate";

export const registerHandler = async (ctx: MyContext) => {
  const existingUser = await User.findOne({ telegramId: ctx.from!.id });

  if (existingUser) {
    await ctx.reply("‚ùå –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.");
    return;
  }

  // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  ctx.session.step = "WAITING_NAME";
  ctx.session.userData = {}; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º userData –≤ —Å–µ—Å—Å–∏–∏
  await ctx.reply("‚úè –í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ü–Ü–ë:");
};

export const handleRegistration = async (ctx: MyContext) => {
  if (!ctx.session.step) return;

  const telegramId = ctx.from!.id;
  const messageText = ctx.message?.text;

  if (!messageText) {
    await ctx.reply("‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    return;
  }

  if (ctx.session.step === "WAITING_NAME") {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.userData!.fullName = messageText;
    ctx.session.step = "WAITING_BIRTHDATE";
    await ctx.reply("üìÖ –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–¥–¥.–º–º.–≥–≥–≥–≥):");
  } else if (ctx.session.step === "WAITING_BIRTHDATE") {
    if (!isValidDate(messageText)) {
      await ctx.reply(
        "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∞–±–æ –¥–∞—Ç–∞ –Ω–µ —ñ—Å–Ω—É—î. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–¥.–º–º.–≥–≥–≥–≥."
      );
      return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.userData!.birthDate = messageText;
    const { fullName, birthDate } = ctx.session.userData!;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º telegramId
    const existingUser = await User.findOne({ telegramId });
    if (existingUser) {
      await ctx.reply("‚ùå –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.");
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await User.create({
      telegramId,
      fullName,
      birthDate,
      records: [],
    });

    await ctx.reply(
      `‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüë§ –ü–Ü–ë: ${fullName}\nüìÖ –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: ${birthDate}`
    );

    // –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–∏
    ctx.session.step = null;
    ctx.session.userData = {};
  }
};
