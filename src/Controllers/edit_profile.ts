import { User } from "../Models/User";
import { MyContext } from "../types/MyContext";
import { isValidDate } from "../utils/validateDate";

export const editProfileHandler = async (ctx: MyContext) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è
  if (!ctx.session) {
    ctx.session = {}; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  }

  const user = await User.findOne({ telegramId: ctx.from!.id });

  if (!user) {
    await ctx.reply("‚ùå –í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.");
    return;
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
  console.log("Starting edit profile process");
  console.log(`Current session before update: ${JSON.stringify(ctx.session)}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —à–∞–≥ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏
  if (!ctx.session.step) {
    ctx.session.step = "EDIT_NAME"; // –ù–∞—á–∏–Ω–∞–µ–º —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º userData –≤ —Å–µ—Å—Å–∏–∏
  ctx.session.userData = ctx.session.userData || {};

  // –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await ctx.reply(`‚úè –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—ñ –ü–Ü–ë (–ø–æ—Ç–æ—á–Ω—ñ: ${user.fullName}):`);

  // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
  console.log(`Session after step update: ${JSON.stringify(ctx.session)}`);
};

export const handleEditProfile = async (ctx: MyContext) => {
  const user = await User.findOne({ telegramId: ctx.from!.id });

  if (!user) {
    await ctx.reply("‚ùå –í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.");
    return;
  }

  const messageText = ctx.message?.text?.trim();

  if (!messageText) {
    await ctx.reply("‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    return;
  }

  if (ctx.session.step === "EDIT_NAME") {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user.fullName = messageText;
    await user.updateOne(
      { telegramId: ctx.from!.id },
      { $set: { fullName: messageText } }
    );
    await user.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    ctx.session.step = "EDIT_BIRTHDATE";
    await ctx.reply(
      `üìÖ –¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–ø–æ—Ç–æ—á–Ω–∞: ${user.birthDate}):`
    );

    // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
    console.log(`Session after name update: ${JSON.stringify(ctx.session)}`);
  } else if (ctx.session.step === "EDIT_BIRTHDATE") {
    if (!isValidDate(messageText)) {
      await ctx.reply(
        "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∞–±–æ –¥–∞—Ç–∞ –Ω–µ —ñ—Å–Ω—É—î. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–¥.–º–º.–≥–≥–≥–≥."
      );
      return;
    }
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
    user.birthDate = messageText;
    await user.updateOne(
      { telegramId: ctx.from!.id },
      { $set: { birthDate: messageText } }
    );
    user.save();
    await ctx.reply(`‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ!`);
    ctx.session.step = null; // –û—á–∏—Å—Ç–∫–∞ —à–∞–≥–∞
    ctx.session.userData = {}; // –û—á–∏—Å—Ç–∫–∞ userData

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
    console.log(
      `Session after birthdate update: ${JSON.stringify(ctx.session)}`
    );
  }
};
